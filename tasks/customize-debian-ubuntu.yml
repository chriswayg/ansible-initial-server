### CUSTOMIZE ###
# Debian, Ubuntu

- name: Move the original /etc/motd to back it up (once).
  command: mv /etc/motd /etc/motd.original
  args:
    creates: /etc/motd.original
  when: ansible_distribution == 'Debian'

- name: Copy the file which will show a welcome motd after login.
  template:
    src: motd-welcome-debian-ubuntu.sh.j2
    dest: /etc/update-motd.d/15-motd-welcome
    mode: a+x

- name: Copy a motd ascii image file.
  copy:
    src: motd-image
    dest: /etc/motd-image

- name: Ensure that verse is installed.
  apt:
    name: verse
    state: present
  when: iserver_verse_enabled

- name: Copy the file which will show a verse and disk space via motd.
  template:
    src: motd-verse-debian-ubuntu.sh.j2
    dest: /etc/update-motd.d/85-motd-verse
    mode: a+x
  when: iserver_verse_enabled

- name: Remove Ubuntu help-text from motd.
  file:
    path: /etc/update-motd.d/10-help-text
    mode: a-x
  when: ansible_distribution == 'Ubuntu'

# this file is apparently not present in some installations
- name: Check if livepatch motd file exists.
  stat:
    path: /etc/update-motd.d/80-livepatch
  register: file_result

- name: Remove Ubuntu livepatch notifications from motd.
  file:
    path: /etc/update-motd.d/80-livepatch
    mode: a-x
  when: ansible_distribution == 'Ubuntu' and file_result.stat.exists

- name: upgrade software
  command: /opt/software/bin/upgrade
  args:
    removes: etc/software/software.conf.upgrade

- name: Remove Ubuntu ads from motd
  lineinfile:
    path: /etc/default/motd-news
    state: present
    regexp: '^ENABLED='
    line: 'ENABLED=0'
  when: ansible_distribution == 'Ubuntu'

- name: Remove legal notice from Ubuntu user logins.
  copy:
    content: " "
    dest: /etc/legal
  when: ansible_distribution == 'Ubuntu'

- name: Add a block of commands to the root user profile.
  blockinfile:
    path: "/root/.profile"
    block: |
      {{ iserver_deb_user_profile }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK"

- name: Add a block of commands to the default user profile.
  blockinfile:
    path: "/home/{{ iserver_user }}/.profile"
    block: |
      {{ iserver_deb_user_profile }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK"

- name: Add a block of bashrc config to the root user (Debian).
  blockinfile:
    path: "/root/.bashrc"
    block: |
      {{ iserver_bashrc_root_debian }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
  when: ansible_distribution == 'Debian'

- name: Add a block of bashrc config to the default user (Debian).
  blockinfile:
    path: "/home/{{ iserver_user }}/.bashrc"
    block: |
      {{ iserver_bashrc_user_debian }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
  when: ansible_distribution == 'Debian'

- name: Add a block of bashrc config to the root user (Ubuntu).
  blockinfile:
    path: "/root/.bashrc"
    block: |
      {{ iserver_bashrc_root_ubuntu }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
  when: ansible_distribution == 'Ubuntu'

- name: Add a block of bashrc config to the default user (Ubuntu).
  blockinfile:
    path: "/home/{{ iserver_user }}/.bashrc"
    block: |
      {{ iserver_bashrc_user_ubuntu }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
  when: ansible_distribution == 'Ubuntu'

- name: Configure cloud-init to use proper data source
  template:
    src: "templates/cloud-init-pve.cfg.j2"
    dest: "/etc/cloud/cloud.cfg.d/99_pve.cfg"
  when: iserver_cloud_init_enabled == True
